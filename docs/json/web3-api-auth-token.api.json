{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.28.0",
    "schemaVersion": 1008,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@kelp_digital/web3-api-auth-token!",
  "docComment": "",
  "name": "@kelp_digital/web3-api-auth-token",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@kelp_digital/web3-api-auth-token!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@kelp_digital/web3-api-auth-token!decode:function(1)",
          "docComment": "/**\n * Decode the base64Url encoded string to a decoded string.\n *\n * @remarks\n *\n * More info here https://www.rfc-editor.org/rfc/rfc4648 #Table 2: The \"URL and Filename safe\" Base 64 Alphabet\n *\n * @param d - encoded payload\n *\n * @param safe - Tell decoder that we are decoding base64Url save payload. This is default behavior.\n *\n * @returns Decoded string or fails with the error if it cannot find `atob` or `Buffer`\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function decode(d: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", safe?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "d",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "safe",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "decode"
        },
        {
          "kind": "Function",
          "canonicalReference": "@kelp_digital/web3-api-auth-token!encode:function(1)",
          "docComment": "/**\n * Encode the string to Base64 URL safe\n *\n * @remarks\n *\n * More info here https://www.rfc-editor.org/rfc/rfc4648 #Table 2: The \"URL and Filename safe\" Base 64 Alphabet\n *\n * @param d - Any kind of string data\n *\n * @param safe - Tell encoder that we are decoding base64Url save payload. This is default behavior.\n *\n * @returns Encoded string or fails with the error if it cannot find `atob` or `Buffer`\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function encode(d: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", safe?: "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "d",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "safe",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "encode"
        },
        {
          "kind": "Function",
          "canonicalReference": "@kelp_digital/web3-api-auth-token!expressWeb3AuthMiddleware:function(1)",
          "docComment": "/**\n * Authentication Middleware.\n *\n * @param req - Express Request\n *\n * @param res - Express Response\n *\n * @param next - Express Next function\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function expressWeb3AuthMiddleware(req: "
            },
            {
              "kind": "Reference",
              "text": "Request",
              "canonicalReference": "@types/express!~e.Request:interface"
            },
            {
              "kind": "Content",
              "text": ", res: "
            },
            {
              "kind": "Reference",
              "text": "Response",
              "canonicalReference": "@types/express!~e.Response:interface"
            },
            {
              "kind": "Content",
              "text": ", next: "
            },
            {
              "kind": "Reference",
              "text": "NextFunction",
              "canonicalReference": "@types/express!~e.NextFunction:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 9
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "req",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "res",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "next",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "expressWeb3AuthMiddleware"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@kelp_digital/web3-api-auth-token!ISubstratePayload:interface",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ISubstratePayload "
            }
          ],
          "releaseTag": "Public",
          "name": "ISubstratePayload",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@kelp_digital/web3-api-auth-token!ISubstratePayload#account:member",
              "docComment": "/**\n * Public address in valid SS58 format\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "account: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "account",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@kelp_digital/web3-api-auth-token!ISubstratePayload#exp:member",
              "docComment": "/**\n * exp or TimeToLive in milliseconds. This is basically expiration of the token. After this time the token is not valid and MUST be rejected.\n *\n * @remarks\n *\n * Use this snippet to add 7 mins to the current date making the token available within 7 minutes\n * ```js\n * const now = new Date();\n * const exp = now.setMinutes(now.getMinutes() + 7); // this returns the ms\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "exp?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "exp",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@kelp_digital/web3-api-auth-token!ISubstratePayload#network:member",
              "docComment": "/**\n * to which network this account belongs to.\n *\n * @remarks\n *\n * This value will not be modified, it is up to you to add this correctly.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "network: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "network",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@kelp_digital/web3-api-auth-token!ISubstratePayload#prefix:member",
              "docComment": "/**\n * SS58 prefix\n *\n * @remarks\n *\n * Full list here https://github.com/paritytech/ss58-registry/blob/main/ss58-registry.json\n *\n * The validation process will not verify the validity of the prefix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "prefix: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "prefix",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@kelp_digital/web3-api-auth-token!StrategyValidationError:class",
          "docComment": "/**\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class StrategyValidationError extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "releaseTag": "Public",
          "name": "StrategyValidationError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@kelp_digital/web3-api-auth-token!StrategyValidationError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `StrategyValidationError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(message: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", status: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "message",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "status",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@kelp_digital/web3-api-auth-token!StrategyValidationError#status:member",
              "docComment": "/**\n * HTTP status code\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "status: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isStatic": false,
              "isProtected": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@kelp_digital/web3-api-auth-token!SubstrateStrategy:class",
          "docComment": "/**\n * You can pass the payload in to the constructor or later set it via setter Example\n * ```ts\n * const now = new Date();\n * const exp = now.setMinutes(now.getMinutes() + 5);\n * const tokenPayload = {\n *    account: 'just-normal-substrate-based-address',\n *    network: 'anagolay',\n *    prefix: 42,\n *    exp // optional, but if present then the token will not be accepted if now() is larger than this field\n * \t};\n * const t = new SubstrateStrategy(tokenPayload);\n * // or\n * const t =  new SubstrateStrategy();\n * t.payload = tokenPayload;\n * ```\n *\n * @public\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class SubstrateStrategy extends "
            },
            {
              "kind": "Reference",
              "text": "BaseStrategy",
              "canonicalReference": "@kelp_digital/web3-api-auth-token!BaseStrategy:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ISubstratePayload",
              "canonicalReference": "@kelp_digital/web3-api-auth-token!ISubstratePayload:interface"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "releaseTag": "Public",
          "name": "SubstrateStrategy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@kelp_digital/web3-api-auth-token!SubstrateStrategy:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SubstrateStrategy` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(payload?: "
                },
                {
                  "kind": "Reference",
                  "text": "ISubstratePayload",
                  "canonicalReference": "@kelp_digital/web3-api-auth-token!ISubstratePayload:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "payload",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@kelp_digital/web3-api-auth-token!SubstrateStrategy#validate:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "validate(token: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ISubstratePayload",
                  "canonicalReference": "@kelp_digital/web3-api-auth-token!ISubstratePayload:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "token",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "validate"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 4
          },
          "implementsTokenRanges": []
        }
      ]
    }
  ]
}
