link {
	debug
	email daniel@woss.io
	log {
		output file /var/logs/caddy.log
		level DEBUG
	}
}
# macula.link

# reverse_proxy 127.0.0.1:3000

macula.link {
	# respond / "Hi, thanks for stopping by. Please leave :)"
	#  URI will always add a last / as a part of the redirect! very useful fr the /dir -> /dir/ redirects 
	rewrite * /hosting/withSubdomain/macula{uri}

	reverse_proxy http://127.0.0.1:3000
	# encode zstd gzip
	log {
		output file /var/logs/macula.link.sub.log
		level INFO
	}
}

ipf.api.macula.link {
	rewrite * /ipfs_api/{labels.2}{uri}
	reverse_proxy http://127.0.0.1:3000
	log {
		output file /var/logs/macula.link.ipfs-api.log
		level INFO
	}
}

# *.on.an.net {
# 	rewrite * /{labels.3}{uri}
# 	reverse_proxy macula.link:3000
# }
# The placeholders {labels.*} are the segments of the hostname separated by the dots, 0-indexed from the right. So 0 is net, 1 is an, 2 is on and 3 is whatever your hash is.

# So youâ€™re performing a rewrite to prepend that bit from the domain to the path, and adding {uri} to preserve the rest of the URI (path + query).


*.macula.link {
	tls {
		dns hetzner HETZNER_TOKEN
	}
	#  URI will always add a last / as a part of the redirect! very useful fr the /dir -> /dir/ redirects 
	rewrite * /hosting/withSubdomain/{labels.2}{uri}

	reverse_proxy http://127.0.0.1:3000
	# encode zstd gzip
	log {
		output file /var/logs/macula.link.sub.log
		level INFO
	}
}

*.on.macula.link {
	tls {
		dns hetzner HETZNER_TOKEN
	}
	#  URI will always add a last / as a part of the redirect! very useful fr the /dir -> /dir/ redirects 
	rewrite * /hosting/withIpfs/{labels.3}{uri}

	reverse_proxy http://127.0.0.1:3000

	log {
		output file /var/logs/macula.link.on.log
		level INFO
	}
}
